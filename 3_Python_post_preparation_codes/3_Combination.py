"""
Combine the input parameters and the stresses
--------------------------------------------------
Author: Pranav Deshpande
Date: July 2025

Read the Input parameter generated by 'Input_parameter.py' code and read the 'combined_stress_output'
folder generated by 'Extraction.py' code and merge them together

Changes:
- Address of the sobol_composites_cleaned.csv on line 48
- Address of the combined_stress_output folder on line 61
- The design points to be merged

Input: 
- first will have to make the following folder by ourself

        Component_stresses/
        ├── load1                           
        ├── load2
        ├── load3 
        ├── load4 
        ├── load5
        └── load6
        
- Then give the Address of this folder on line 74

Outputs: 

Component_stresses/
│
├── loadX/              # Where load vary from 1 to 6      
│   │
│   ├── le_1.csv             
│   ├── le_2.csv            
│   ├── ...
│   └── le_n.csv   
└── ...

"""


import pandas as pd
import os

# Read design parameters
parameters = pd.read_csv("sobol_composites_cleaned.csv")            #Change the location

# Cache to store existing datapoints per file (in memory, fast)
written_cache = {}

# Loop over all 58 components (k = 0 to 57)
for k in range(58):
    print(f"\n▶ Processing component {k}")

    for i in range(727 , 907):                                      # Change the Design Point      
        datapoint = parameters.iloc[i, 0]

        for j in range(1, 7):  # load1 to load6
            stress_file = fr"combined_stress_output\{datapoint}\load{j}\stress_summary.csv"     #change the location
            try:
                stresses = pd.read_csv(stress_file)
            except Exception as e:
                print(f"❌ Could not read {stress_file}: {e}")
                continue

            try:
                component_name = str(stresses.iloc[k, 0]).strip()
            except Exception as e:
                print(f"❌ Error reading component name at row {k} in {stress_file}: {e}")
                continue

            output_folder = fr"C:\Pranav_folders\Pranav6.1\Component_stresses\load{j}"          #change the location of the folders
            os.makedirs(output_folder, exist_ok=True)
            output_file = os.path.join(output_folder, component_name)

            # Initialize cache for file if not already done
            if output_file not in written_cache:
                if os.path.exists(output_file):
                    try:
                        existing = pd.read_csv(output_file, usecols=[0])  # Only read Design Point column
                        written_cache[output_file] = set(existing.iloc[:, 0].astype(str))
                    except:
                        written_cache[output_file] = set()
                else:
                    written_cache[output_file] = set()

            # Skip if already written
            if str(datapoint) in written_cache[output_file]:
                continue

            # Build row
            stress_row = stresses.iloc[k].drop("Component")
            dp_row = parameters.iloc[i]
            combined_data = pd.concat([dp_row, stress_row])
            final_df = pd.DataFrame([combined_data])

            # Append to file
            write_header = not os.path.exists(output_file)
            final_df.to_csv(output_file, mode='a', index=False, header=write_header)

            # Update cache
            written_cache[output_file].add(str(datapoint))

            print(f"✅ Written {datapoint} → {component_name} (load{j})")
